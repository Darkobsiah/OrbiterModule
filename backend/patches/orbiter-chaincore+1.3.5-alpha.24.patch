diff --git a/node_modules/orbiter-chaincore/src/chain/evm-chain.service.js b/node_modules/orbiter-chaincore/src/chain/evm-chain.service.js
index 5bb1ad1..e35f8d2 100644
--- a/node_modules/orbiter-chaincore/src/chain/evm-chain.service.js
+++ b/node_modules/orbiter-chaincore/src/chain/evm-chain.service.js
@@ -272,14 +272,14 @@ class EVMChain {
             if (token) {
                 return token.symbol;
             }
-            try {
-                const tokenContract = new this.web3.eth.Contract(utils_1.abi.IERC20_ABI_JSON, tokenAddress);
-                const symbol = yield tokenContract.methods.symbol().call();
-                return symbol;
-            }
-            catch (error) {
-                logger_1.default.error(`${this.chainConfig.name} getTokenSymbol Error:${tokenAddress}`, error);
-            }
+            // try {
+            //     const tokenContract = new this.web3.eth.Contract(utils_1.abi.IERC20_ABI_JSON, tokenAddress);
+            //     const symbol = yield tokenContract.methods.symbol().call();
+            //     return symbol;
+            // }
+            // catch (error) {
+            //     logger_1.default.error(`${this.chainConfig.name} getTokenSymbol Error:${tokenAddress}`, error);
+            // }
             return "";
         });
     }
diff --git a/node_modules/orbiter-chaincore/src/watch/starknet.watch.js b/node_modules/orbiter-chaincore/src/watch/starknet.watch.js
index 62cb071..818b0a2 100644
--- a/node_modules/orbiter-chaincore/src/watch/starknet.watch.js
+++ b/node_modules/orbiter-chaincore/src/watch/starknet.watch.js
@@ -46,7 +46,7 @@ class StarknetWatch extends base_watch_1.default {
                 ? yield (yield this.chain.provider.getTransaction(hashOrTx)).transaction
                 : hashOrTx;
             try {
-                const from = (0, core_1.fix0xPadStartAddress)(originTx["contract_address"], 66);
+                const from = (0, core_1.fix0xPadStartAddress)(originTx["contract_address"] || originTx["sender_address"], 66);
                 let isMatchTx = yield this.isWatchWalletAddress(from);
                 const { transaction_hash } = originTx, extra = __rest(originTx, ["transaction_hash"]);
                 const chainConfig = this.chain.chainConfig;
diff --git a/node_modules/orbiter-chaincore/src/watch/zksync2.watcht.js b/node_modules/orbiter-chaincore/src/watch/zksync2.watcht.js
index bf63915..a729dfb 100644
--- a/node_modules/orbiter-chaincore/src/watch/zksync2.watcht.js
+++ b/node_modules/orbiter-chaincore/src/watch/zksync2.watcht.js
@@ -18,7 +18,7 @@ class ZKSync2Watch extends evm_watch_1.default {
     constructor() {
         super(...arguments);
         this.minConfirmations = 3;
-        this.feeAddress = "0xde03a0B5963f75f1C8485B355fF6D30f3093BDE7".toLowerCase();
+        // this.feeAddress = "0xde03a0B5963f75f1C8485B355fF6D30f3093BDE7".toLowerCase();
     }
     getApiFilter(address) {
         return __awaiter(this, void 0, void 0, function* () {
@@ -36,10 +36,10 @@ class ZKSync2Watch extends evm_watch_1.default {
         });
     }
     pushBefore(address, txList) {
-        return __awaiter(this, void 0, void 0, function* () {
-            txList = txList.filter(tx => tx.to.toLowerCase() != this.feeAddress);
+        // return __awaiter(this, void 0, void 0, function* () {
+            // txList = txList.filter(tx => tx.to.toLowerCase() != this.feeAddress);
             return { address, txList };
-        });
+        // });
     }
     apiWatchNewTransaction(address) {
         return __awaiter(this, void 0, void 0, function* () {
